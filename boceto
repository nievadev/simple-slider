# Obj: dar introducción a curses y blessings
# no programar en vivo
# presentar primero lo general luego los detalles
# https://en.wikipedia.org/wiki/ANSI_escape_code
# https://en.wikipedia.org/wiki/Terminfo
# https://en.wikipedia.org/wiki/Termcap
# https://www.youtube.com/watch?v=xGDd9higrzM
# Investigar tput
# https://www.youtube.com/watch?v=eN1eZtjLEnU Use curses, don't swear
# https://www.youtube.com/watch?v=riZ11MM8LGI
# https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals

# top tig pudb 

 TERMINAL SCRIPTING
whoami: Martin Nieva

Introduccion

¿Terminal Scripting?
# bueno como vieron en el titulo el tema vendria a ser terminal scripting
# que es basicamente hacer softwares para la terminal, por eso le puse ese nombre

Mostrar mate-terminal

# poner ejemplo ¿que softwares? Cualquiera, desde...
programa sencillo que pregunta nombres

# Otro ejemplo vendria a ser los siguientes programas
Otros ejemplos
ls # coreutils
vim

# Entre estos programas hay algo que los distingue.
# En ls y cat nosotros ingresamos un 

# Entonces lo que podemos ver acá son un montón de caracteres que están ordenados de modo que parezca una interfaz gráfica, pero en realidad no lo es, son sólo caracteres

print("\x7a") # Prints 'z', \x7a is the ASCII code for 'z'
print("\x1b[31m") # Sets terminal color to RED, since \x1b is the ASCII code for ESCAPE
\x escape sequence means that the next two characters will be interpreted as hex digits

# que es el emulador de terminal?
# mostrarlo

# en gaucho seria una caja bidimensional en la cual ingresamos datos y obtenemos resultados
# un unos momentos voy a explicar muchisimo mejor este concepto

¿Qué vamos a usar?
  import curses # que es, por que usar curses, por que no usar curses
 import blessings # que es

Fin de la introducción

¿Qué podemos hacer? Las posibilidades son "infinitas" # infinitas entre comillas, porque los emuladores tienen ciertas limitaciones
# cuáles son nuestras limitaciones
- No keyup ni keydown # que son esas cosas - asi que no podemos saber cuanto presionamos una tecla, lo que significaria que no podemos efectuar eventos mientras presionamos algo
- Solo pseudo 3D # por que y que es
# poner mas cosas

# mostrar ejemplos
# dos tipos de softwares de terminal: 
# mostrar diagrama que explica lo que hacen estos dos tipos de software, como el de thomas ballinger

# voy a enseñar esto y esto
# podemos empezar directamente a programar con curses sin saber esto
# o sea, no es necesario
# pero tampoco es necesario saber <inserte comparacion>, no es asi?
# comenzar a enseñarlo

# elaborate later "terminal concept"
    # hacerlo con un punto "No es una terminal. "
    # bueno, a que me refiero con un emulador de terminal? primero tenemos que entender que es una terminal. la gente suele llamar terminal a esto, pensando erroneamente que lo es cuando en realidad solo es un emulador. Creacion de VT50 en 1974 *muestra una foto de la maquina*, entonces una terminal en realidad seria un dispositivo en el cual mediante un teclado ingresabas comandos cuyos resultados se observaban en la pantalla
    # que fue reemplazada en 1975 por la VT52 que tenia unas cuantas mejoras (poder scrollear, 80x24 columnas y filas, lenguaje que permitia al cursor moverse a lo largo de la pantalla)
    # entonces con terminal nos referimos a un teclado conectado a una pantalla
# end elaborate

# elaborate later "curses"
    # Es una libreria  ya incorporada en Python que nos provee múltiples utilidades, tales son
    # keyboard-handling -> getch()
    # screen-painting
    # Todo es terminal-independiente
# end elaborate
